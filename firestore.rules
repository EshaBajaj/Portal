rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ============================================================================
    // HELPER FUNCTIONS
    // ============================================================================
    
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserRole() {
      return isAuthenticated() ? 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role : null;
    }
    
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'admin';
    }
    
    function isStudent() {
      return isAuthenticated() && getUserRole() == 'student';
    }
    
    function isRecruiter() {
      return isAuthenticated() && getUserRole() == 'recruiter';
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && getUserRole() == 'super_admin';
    }
    
    function isOwner(resourceUserId) {
      return isAuthenticated() && request.auth.uid == resourceUserId;
    }
    
    // ============================================================================
    // USERS COLLECTION - Authentication and role management
    // ============================================================================
    
    match /users/{userId} {
      // Users can read and write their own profile
      allow read, write: if isOwner(userId);
      
      // All authenticated users can read user profiles (for role checking)
      allow read: if isAuthenticated();
      
      // Allow creating user documents during authentication
      allow create: if request.auth != null && request.auth.uid == userId;
      
      // Admins and Super Admins can read and update any user profile
      allow read, write: if isAdmin() || isSuperAdmin();
    }
    
    // ============================================================================
    // ADMIN_REQUESTS COLLECTION - Admin approval workflow
    // ============================================================================
    
    match /admin_requests/{requestId} {
      // Only Super Admin can read all requests
      allow read: if isSuperAdmin();
      
      // Authenticated users can create their own admin request
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.uid;
      
      // Only Super Admin can update admin requests (approve/reject)
      allow update: if isSuperAdmin();
      
      // Super Admin can delete admin requests
      allow delete: if isSuperAdmin();
    }
    
    // ============================================================================
    // STUDENTS COLLECTION - Complete student profiles
    // ============================================================================
    
    match /students/{studentId} {
      // Students can read and write their own profile
      allow read, write: if isAuthenticated() && request.auth.uid == studentId;
      
      // Admins and Super Admins can read and write all student profiles
      allow read, write: if isAdmin() || isSuperAdmin();
      
      // Recruiters can read student profiles (for job matching)
      allow read: if isRecruiter();
      
      // System can read for email notifications
      allow read: if isAuthenticated();
    }
    
    // ============================================================================
    // SKILLS COLLECTION - Student skills management
    // ============================================================================
    
    match /skills/{skillId} {
      // Students can manage their own skills
      allow read, write: if isAuthenticated() && 
        request.auth.uid == resource.data.studentId;
      
      // Students can create skills for themselves
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.studentId;
      
      // Admins and Super Admins can read all skills
      allow read: if isAdmin() || isSuperAdmin();
      
      // Recruiters can read skills
      allow read: if isRecruiter();
    }
    
    // ============================================================================
    // EDUCATIONAL_BACKGROUND COLLECTION - Student education records
    // ============================================================================
    
    match /educational_background/{educationId} {
      // Students can manage their own education records
      allow read, write: if isAuthenticated() && 
        request.auth.uid == resource.data.studentId;
      
      // Students can create education records for themselves
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.studentId;
      
      // Admins and Super Admins can read all education records
      allow read: if isAdmin() || isSuperAdmin();
      
      // Recruiters can read education records
      allow read: if isRecruiter();
    }
    
    // ============================================================================
    // COMPANIES COLLECTION - Company information
    // ============================================================================
    
    match /companies/{companyId} {
      // All authenticated users can read company information
      allow read: if isAuthenticated();
      
      // Admins and Super Admins can create, update, and delete companies
      allow create, update, delete: if isAdmin() || isSuperAdmin();
      
      // Recruiters can update companies (if needed)
      allow create, update: if isRecruiter();
    }
    
    // ============================================================================
    // JOBS COLLECTION - Job postings with targeting
    // ============================================================================
    
    match /jobs/{jobId} {
      // All authenticated users can read jobs
      allow read: if isAuthenticated();
      
      // Admins and Super Admins can create, update, and delete all jobs
      allow create, update, delete: if isAdmin() || isSuperAdmin();
      
      // Recruiters can create and update their own jobs
      allow create: if isRecruiter();
      allow update: if isRecruiter() && 
        resource.data.recruiterId == request.auth.uid;
    }
    
    // ============================================================================
    // APPLICATIONS COLLECTION - Job applications
    // ============================================================================
    
    match /applications/{applicationId} {
      // Students can read and create their own applications
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.studentId;
      
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.studentId;
      
      // Recruiters can read applications for their jobs and update status
      allow read, update: if isRecruiter() && 
        isAuthenticated() &&
        exists(/databases/$(database)/documents/jobs/$(resource.data.jobId)) &&
        get(/databases/$(database)/documents/jobs/$(resource.data.jobId)).data.recruiterId == request.auth.uid;
      
      // Admins and Super Admins can read and update all applications
      allow read, update: if isAdmin() || isSuperAdmin();
    }
    
    // ============================================================================
    // STUDENT_QUERIES COLLECTION - Student support queries
    // ============================================================================
    
    match /student_queries/{queryId} {
      // Students can read and create their own queries
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.studentId;
      
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.studentId;
      
      // Admins and Super Admins can read all queries and update status/responses
      allow read, update: if isAdmin() || isSuperAdmin();
      
      // System can create notifications (for admins)
      allow read: if isAuthenticated();
    }
    
    // ============================================================================
    // NOTIFICATIONS COLLECTION - System notifications
    // ============================================================================
    
    match /notifications/{notificationId} {
      // Users can read their own notifications
      allow read: if isAuthenticated() && 
        request.auth.uid == resource.data.userId;
      
      // Users can update their own notifications (mark as read)
      allow update: if isAuthenticated() && 
        request.auth.uid == resource.data.userId &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['isRead']);
      
      // System and admins can create notifications
      allow create: if isAuthenticated();
      
      // Admins and Super Admins can read all notifications
      allow read: if isAdmin() || isSuperAdmin();
    }
    
    // ============================================================================
    // EMAIL_NOTIFICATIONS COLLECTION - Email system
    // ============================================================================
    
    match /emailNotifications/{emailId} {
      // System can create email notifications
      allow create: if isAuthenticated();
      
      // Admins and Super Admins can read all email notifications
      allow read: if isAdmin() || isSuperAdmin();
      
      // System can update email status (sent, failed, etc.)
      allow update: if isAuthenticated() &&
        request.resource.data.diff(resource.data).affectedKeys().hasOnly(['status']);
    }
    
    // ============================================================================
    // UNSUBSCRIBED_USERS COLLECTION - Email preferences
    // ============================================================================
    
    match /unsubscribedUsers/{unsubId} {
      // Anyone can create unsubscribe records (public unsubscribe links)
      allow create: if true;
      
      // System can read for email filtering
      allow read: if isAuthenticated();
      
      // Admins and Super Admins can read all unsubscribe data
      allow read: if isAdmin() || isSuperAdmin();
    }
    
    // ============================================================================
    // RESUMES COLLECTION - Resume file storage
    // ============================================================================
    
    match /resumes/{resumeId} {
      // Students can manage their own resumes (resumeId = userId)
      allow read, write: if isAuthenticated() && 
        request.auth.uid == resumeId;
      
      // Students can create resumes for themselves
      allow create: if isAuthenticated() && 
        request.auth.uid == request.resource.data.userId;
      
      // Recruiters can read resumes (for applications)
      allow read: if isRecruiter();
      
      // Admins and Super Admins can read all resumes
      allow read: if isAdmin() || isSuperAdmin();
    }
    
    // ============================================================================
    // DEFAULT DENY RULE - Security fallback
    // ============================================================================
    
    match /{document=**} {
      allow read, write: if false;
    }
  }
}